
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.22.0
 * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
 */
Prisma.prismaVersion = {
  client: "5.22.0",
  engine: "605197351a3c8bdd595af2d2a9bc3025bca48ea2"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  password: 'password',
  role: 'role',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt'
};

exports.Prisma.EmpresaScalarFieldEnum = {
  id: 'id',
  cnpj: 'cnpj',
  razaoSocial: 'razaoSocial',
  nomeFantasia: 'nomeFantasia',
  ie: 'ie',
  im: 'im',
  cnae: 'cnae',
  endereco: 'endereco',
  regimeTributario: 'regimeTributario',
  dataCadastro: 'dataCadastro',
  updatedAt: 'updatedAt'
};

exports.Prisma.DocumentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  filename: 'filename',
  originalName: 'originalName',
  path: 'path',
  size: 'size',
  mimeType: 'mimeType',
  status: 'status',
  metadata: 'metadata',
  empresaId: 'empresaId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AIProcessingResultScalarFieldEnum = {
  id: 'id',
  documentId: 'documentId',
  model: 'model',
  tokens: 'tokens',
  processingTime: 'processingTime',
  result: 'result',
  error: 'error',
  createdAt: 'createdAt'
};

exports.Prisma.LogScalarFieldEnum = {
  id: 'id',
  level: 'level',
  message: 'message',
  metadata: 'metadata',
  userId: 'userId',
  createdAt: 'createdAt'
};

exports.Prisma.CacheEntryScalarFieldEnum = {
  key: 'key',
  value: 'value',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt'
};

exports.Prisma.SpedContribuicoesItemScalarFieldEnum = {
  id: 'id',
  documentId: 'documentId',
  empresaId: 'empresaId',
  documento: 'documento',
  data: 'data',
  cnpj: 'cnpj',
  produto: 'produto',
  cfop: 'cfop',
  cst: 'cst',
  valor: 'valor',
  basePis: 'basePis',
  valorPis: 'valorPis',
  baseCofins: 'baseCofins',
  valorCofins: 'valorCofins',
  createdAt: 'createdAt'
};

exports.Prisma.SpedContribuicoesApuracaoScalarFieldEnum = {
  id: 'id',
  documentId: 'documentId',
  empresaId: 'empresaId',
  tipo: 'tipo',
  periodo: 'periodo',
  base: 'base',
  aliquota: 'aliquota',
  valor: 'valor',
  createdAt: 'createdAt'
};

exports.Prisma.SpedFiscalItemScalarFieldEnum = {
  id: 'id',
  documentId: 'documentId',
  empresaId: 'empresaId',
  documento: 'documento',
  data: 'data',
  cnpj: 'cnpj',
  produto: 'produto',
  cfop: 'cfop',
  cst: 'cst',
  ncm: 'ncm',
  valor: 'valor',
  baseIcms: 'baseIcms',
  valorIcms: 'valorIcms',
  baseIpi: 'baseIpi',
  valorIpi: 'valorIpi',
  createdAt: 'createdAt'
};

exports.Prisma.SpedFiscalApuracaoScalarFieldEnum = {
  id: 'id',
  documentId: 'documentId',
  empresaId: 'empresaId',
  cst: 'cst',
  cfop: 'cfop',
  aliquota: 'aliquota',
  valorOperacao: 'valorOperacao',
  baseIcms: 'baseIcms',
  valorIcms: 'valorIcms',
  baseIcmsSt: 'baseIcmsSt',
  valorIcmsSt: 'valorIcmsSt',
  valorRedBc: 'valorRedBc',
  valorIpi: 'valorIpi',
  createdAt: 'createdAt'
};

exports.Prisma.XMLDocumentScalarFieldEnum = {
  id: 'id',
  documentId: 'documentId',
  empresaId: 'empresaId',
  tipoDocumento: 'tipoDocumento',
  numeroDocumento: 'numeroDocumento',
  serie: 'serie',
  dataEmissao: 'dataEmissao',
  valorTotal: 'valorTotal',
  cnpjEmitente: 'cnpjEmitente',
  cnpjDestinatario: 'cnpjDestinatario',
  cpfDestinatario: 'cpfDestinatario',
  chaveAcesso: 'chaveAcesso',
  protocolo: 'protocolo',
  status: 'status',
  observacoes: 'observacoes',
  valorTotalIcms: 'valorTotalIcms',
  valorTotalIpi: 'valorTotalIpi',
  valorTotalPis: 'valorTotalPis',
  valorTotalCofins: 'valorTotalCofins',
  valorTotalIss: 'valorTotalIss',
  baseCalculoIcms: 'baseCalculoIcms',
  baseCalculoPis: 'baseCalculoPis',
  baseCalculoCofins: 'baseCalculoCofins',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.XMLItemScalarFieldEnum = {
  id: 'id',
  xmlDocumentId: 'xmlDocumentId',
  codigo: 'codigo',
  descricao: 'descricao',
  ncm: 'ncm',
  cfop: 'cfop',
  quantidade: 'quantidade',
  valorUnitario: 'valorUnitario',
  valorTotal: 'valorTotal',
  cst: 'cst',
  aliquotaIcms: 'aliquotaIcms',
  valorIcms: 'valorIcms',
  aliquotaIpi: 'aliquotaIpi',
  valorIpi: 'valorIpi',
  aliquotaPis: 'aliquotaPis',
  valorPis: 'valorPis',
  aliquotaCofins: 'aliquotaCofins',
  valorCofins: 'valorCofins',
  createdAt: 'createdAt'
};

exports.Prisma.ProcessamentoScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  documentoId: 'documentoId',
  status: 'status',
  resultado: 'resultado',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.UserRole = exports.$Enums.UserRole = {
  ADMIN: 'ADMIN',
  USER: 'USER',
  AUDITOR: 'AUDITOR'
};

exports.DocumentStatus = exports.$Enums.DocumentStatus = {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  COMPLETED: 'COMPLETED',
  ERROR: 'ERROR'
};

exports.LogLevel = exports.$Enums.LogLevel = {
  ERROR: 'ERROR',
  WARN: 'WARN',
  INFO: 'INFO',
  DEBUG: 'DEBUG'
};

exports.ProcessamentoStatus = exports.$Enums.ProcessamentoStatus = {
  PENDENTE: 'PENDENTE',
  PROCESSANDO: 'PROCESSANDO',
  CONCLUIDO: 'CONCLUIDO',
  ERRO: 'ERRO'
};

exports.Prisma.ModelName = {
  User: 'User',
  Session: 'Session',
  Empresa: 'Empresa',
  Document: 'Document',
  AIProcessingResult: 'AIProcessingResult',
  Log: 'Log',
  CacheEntry: 'CacheEntry',
  SpedContribuicoesItem: 'SpedContribuicoesItem',
  SpedContribuicoesApuracao: 'SpedContribuicoesApuracao',
  SpedFiscalItem: 'SpedFiscalItem',
  SpedFiscalApuracao: 'SpedFiscalApuracao',
  XMLDocument: 'XMLDocument',
  XMLItem: 'XMLItem',
  Processamento: 'Processamento'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
